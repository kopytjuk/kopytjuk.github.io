<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Marat&#39;s blog</title>
    <link>https://kopytjuk.github.io/</link>
    <description>Recent content on Marat&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Mar 2022 13:00:00 +0100</lastBuildDate><atom:link href="https://kopytjuk.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OpenDD Analysis</title>
      <link>https://kopytjuk.github.io/posts/open-dd-analysis/</link>
      <pubDate>Sat, 05 Mar 2022 13:00:00 +0100</pubDate>
      
      <guid>https://kopytjuk.github.io/posts/open-dd-analysis/</guid>
      <description>Contents   Introduction Dataset description  Trajectories Roundabouts Data schema   Terminology Approach  Overview Trajectory pre-processing Drivable paths Assignment of vehicle trajectories to paths    Introduction Recently, I stumbled upon the OpenDD â€“ A Large-Scale Roundabout Drone Dataset[1] which contains about 80,000 different road users (also pedestrians) tracked over 62 hours of data across 7 roundabouts in Wolfsburg and Ingolstadt (Germany). The road users were tracked via a DJI Phantom 4, a high-end consumer drone floating over the roundabout.</description>
    </item>
    
    <item>
      <title>Wrap C&#43;&#43; algorithms in Python for pre-production evaluation and experimentation.</title>
      <link>https://kopytjuk.github.io/posts/wrapping-cpp-algorithms/</link>
      <pubDate>Mon, 13 Sep 2021 11:19:40 +0100</pubDate>
      
      <guid>https://kopytjuk.github.io/posts/wrapping-cpp-algorithms/</guid>
      <description>TLDR; In model based design paradigm one often implements a proof-of-concept solution in a scripting language before porting the logic to a more performant low-level language like C/C++. This article describes the benefits of calling production-ready (C/C++) ports in Python for functional evaluation and analysis. Assessment tools developed previously during the experimentation stage can be reused. Furthermore, the complexity for experimentation with various internal parameters is reduced, which can optimize costs and expensive debugging prior to the final deployment.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://kopytjuk.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kopytjuk.github.io/about/</guid>
      <description>My name is Marat, I am born in the early 90&amp;rsquo;s, work and live in Heilbronn (South Germany). I was born in Belarus, got my mechatronics degree in Germany. My mother language is Russian, but over the time the available vocabulary in German and English got more advanced.
I count myself as an interdisciplinary developer who believes that combining cross-domain expertise in mechatronical systems, robotics, software engineering, cloud and probability theory is essential towards inspiring, efficient, future-proof and reliable products.</description>
    </item>
    
  </channel>
</rss>
